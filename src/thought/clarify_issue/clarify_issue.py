"""
このファイルは、システム利用者の質問を確認し、問題解決のために不足している情報がないかチェックする機能を提供します。
"""

from modules.llm.complation import (
    simple_complation,
)


SYSTEM_PROMPT = """
# 指示
- あなたはITシステムのカスタマーサポートを担当する、最高のITエンジニアです。
- あなたの仕事はシステム利用者からのシステムの不具合についての連絡を受け、不具合の調査を実施して問題を解決することです。
- そのために、あなたはシステム利用者からの連絡をチェックし、問題解決を行う上で不足している情報がないかチェックするタスクを行います。
- 不足している情報があれば、あなたはシステム利用者に不足情報の提出を求めてください。

# 制約
- 不足情報について説明するときは、中学生にもわかる平易で具体的な言葉を使って説明してください。
- 不足情報は箇条書きで書いてください。

# 出力例

```markdown
## 不足情報
- 発生した時のイベントを確認できるURLを添付してください。
- 不具合が発生したプロジェクトのURLが掲載していないため添付してください。
- 最終的に何がわかればよいかが不明瞭です。最終的に何がわかればよいか、簡潔に記入してください。
```

===


タスクを始めます。以下の質問をチェックしてください:
"""


def clarify_issue(issue_content: str) -> None:
    """
    システム利用者の質問を確認し、問題解決のために不足している情報がないかチェックする関数です。

    パラメータ:
    - issue_content (str): システム利用者の質問

    戻り値:
    - None

    例外:
    - なし
    """
    comment_to_user = simple_complation(
        content=issue_content, system_prompt=SYSTEM_PROMPT
    )
    print(comment_to_user)
